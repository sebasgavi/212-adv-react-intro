{"version":3,"sources":["components/Link/Link.tsx","components/MusicElem/MusicElem.tsx","components/App/App.tsx","reportWebVitals.ts","index.tsx"],"names":["Link","props","className","active","href","url","text","MusicElem","React","color","setColor","console","log","Math","random","styles","backgroundColor","onClick","floor","style","title","musicElems","id","img","App","useState","count","setCount","useEffect","setInterval","prev","map","elem","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"8RASaA,EAA4B,SAACC,GAExC,IAAIC,EAAY,OAKhB,OAJGD,EAAME,SACPD,GAAa,iBAGR,mBAAGA,UAAWA,EAAWE,KAAMH,EAAMI,IAArC,SACJJ,EAAMK,QCWIC,G,MApB6B,SAACN,GAAW,IAAD,EACzBO,WAAe,OADU,mBAC7CC,EAD6C,KACtCC,EADsC,KAErDC,QAAQC,IAAI,uBACFC,KAAKC,SAAf,IAEMC,EAA8B,CAClCC,gBAAiBP,GAOnB,OAAQ,yBAASP,UAAU,YACzBe,QALkB,WAClBP,EAAS,iBAAD,OAAkBG,KAAKK,MAAsB,IAAhBL,KAAKC,UAAlC,OAKRK,MAAOJ,EAFD,SAGN,6BAAKd,EAAMmB,YCfTC,EAA6B,CACjC,CACEC,GAAIT,KAAKC,SACTM,MAAO,iBACPG,IAAK,IAEP,CACED,GAAIT,KAAKC,SACTM,MAAO,iBACPG,IAAK,IAEP,CACED,GAAIT,KAAKC,SACTM,MAAO,YACPG,IAAK,IAEP,CACED,GAAIT,KAAKC,SACTM,MAAO,kBACPG,IAAK,IAEP,CACED,GAAIT,KAAKC,SACTM,MAAO,YACPG,IAAK,IAEP,CACED,GAAIT,KAAKC,SACTM,MAAO,YACPG,IAAK,KA0CMC,MAtCf,WAAgB,IAAD,EAEehB,IAAMiB,SAAS,GAF9B,mBAELC,EAFK,KAEEC,EAFF,KAWb,OARAnB,IAAMoB,WAAU,WACdC,aAAY,WACVF,GAAS,SAAAG,GAAI,OAAIA,EAAO,OACvB,OACF,IAEHnB,QAAQC,IAAI,UAGV,gCACE,iDAAoBc,KAEpB,sBAAKxB,UAAU,WAAf,UACE,cAAC,EAAD,CACEI,KAAK,OACLD,IAAI,gDACJF,QAAM,IACR,cAAC,EAAD,CACEG,KAAK,WACLD,IAAI,+CACN,cAAC,EAAD,CACEC,KAAK,OACLD,IAAI,8BACN,cAAC,EAAD,CACEC,KAAK,YACLD,IAAI,kDAGPgB,EAAWU,KAAI,SAACC,GACf,OAAO,cAAC,EAAD,CAAyBZ,MAAOY,EAAKZ,MAAOG,IAAI,IAAhCS,EAAKV,WC5DrBW,EAZS,SAACC,GACnBA,GAAeA,aAAuBC,UACxC,6BAAqBC,MAAK,YAAkD,IAA/CC,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAON,GACPO,EAAQP,OCHdQ,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,SAM1Bb,M","file":"static/js/main.0443c864.chunk.js","sourcesContent":["import React from 'react';\r\nimport './Link.css';\r\n\r\ninterface LinkProps {\r\n  text: string;\r\n  active?: boolean;\r\n  url: string;\r\n}\r\n\r\nexport const Link: React.FC<LinkProps> = (props) => {\r\n\r\n  let className = 'Link';\r\n  if(props.active) {\r\n    className += ' Link--active';\r\n  }\r\n\r\n  return <a className={className} href={props.url}>\r\n    {props.text}\r\n  </a>;\r\n}","import * as React from 'react';\r\nimport './MusicElem.css';\r\n\r\nexport interface MusicElemProps {\r\n  img: string;\r\n  title: string;\r\n}\r\n\r\nconst MusicElem: React.FC<MusicElemProps> = (props) => {\r\n  const [ color, setColor ] = React.useState('red');\r\n  console.log('dentro de MusicElem');\r\n  const r = Math.random(); // en cada renderización va a ser diferente\r\n\r\n  const styles: React.CSSProperties = {\r\n    backgroundColor: color,\r\n  };\r\n\r\n  const changeColor = () => {\r\n    setColor(`rgb(200, 200, ${Math.floor(Math.random() * 255)})`);\r\n  }\r\n\r\n  return (<article className=\"MusicElem\"\r\n    onClick={changeColor}\r\n    style={styles}>\r\n    <h2>{props.title}</h2>\r\n  </article>);\r\n}\r\n\r\nexport default MusicElem;","import React from 'react';\nimport './App.css';\nimport { Link } from '../Link/Link';\nimport MusicElem, { MusicElemProps } from '../MusicElem/MusicElem';\n\ntype MusicElemObj = MusicElemProps & {\n  id: number;\n}\n\nconst musicElems: MusicElemObj[] = [\n  {\n    id: Math.random(),\n    title: 'Otro título',\n    img: '',\n  },\n  {\n    id: Math.random(),\n    title: 'Título edit',\n    img: ''\n  },\n  {\n    id: Math.random(),\n    title: 'Otra cosa',\n    img: '',\n  },\n  {\n    id: Math.random(),\n    title: 'Una cuarta cosa',\n    img: '',\n  },\n  {\n    id: Math.random(),\n    title: 'La quinta',\n    img: '',\n  },\n  {\n    id: Math.random(),\n    title: 'Última',\n    img: '',\n  },\n];\n\nfunction App() {\n\n  const [ count, setCount ] = React.useState(0);\n  React.useEffect(() => {\n    setInterval(() => {\n      setCount(prev => prev + 1);\n    }, 1000);\n  }, []);\n\n  console.log('render');\n\n  return (\n    <div>\n      <h2>Hola desde App {count}</h2>\n\n      <nav className=\"App__nav\">\n        <Link\n          text=\"Docs\"\n          url=\"https://reactjs.org/docs/getting-started.html\"\n          active />\n        <Link\n          text=\"Tutorial\"\n          url=\"https://reactjs.org/tutorial/tutorial.html\"></Link>\n        <Link\n          text=\"Blog\"\n          url=\"https://reactjs.org/blog/\"></Link>\n        <Link\n          text=\"Community\"\n          url=\"https://reactjs.org/community/support.html\"></Link>\n      </nav>\n\n      {musicElems.map((elem) => {\n        return <MusicElem key={elem.id} title={elem.title} img=\"\" />;\n      })}\n    </div>\n  );\n}\n\nexport default App;\n","import { ReportHandler } from 'web-vitals';\n\nconst reportWebVitals = (onPerfEntry?: ReportHandler) => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './components/App/App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}